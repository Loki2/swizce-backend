# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Scream Model"""
type Comment {
  description: String!
  id: ID!
  recomments: [Recomment!]!
  scream: Scream!
  user: User!
}

"""Scream Model"""
type Current {
  address: String!
  city: String!
  country: String!
  id: ID!
  profile: Profile!
  state: String!
  user: User!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Scream Model"""
type Hometown {
  address: String!
  city: String!
  country: String!
  id: ID!
  profile: Profile!
  state: String!
  user: User!
}

type Mutation {
  createComment(description: String!, screamId: String!): Comment!
  createProduct(color: String!, description: String!, imageUrl: String!, name: String!, price: Float!, quantity: Float!, size: Float!): Product!
  createProfile(age: Float!, bios: String!, birthdate: DateTime!, coverUrl: String!, firstname: String!, gender: String!, lastname: String!, mentalStatus: String!, profileUrl: String!): Profile!
  createRecomment(commentId: String!, description: String!, screamId: String!): Recomment!
  createScream(description: String!, imageUrl: String!): Scream!
  createService(address: String!, contact: String!, description: String!, imageUrl: String!, logoUrl: String!, name: String!, tags: String!): Service!
  createSong(alblum: String!, artist: String!, fileUrl: String!, genre: String!, imageUrl: String!, name: String!): Song!
  createTypeservice(desc: String!): Typeservice!
  deleteProduct(productId: String!): ResponseMessage
  deleteUser(userId: String!): ResponseMessage
  requestResetPassword(email: String!): ResponseMessage
  resetPassword(confirmpassword: String!, password: String!, token: String!): ResponseMessage
  signIn(email: String!, password: String!): User
  signOut: ResponseMessage
  signUp(email: String!, password: String!, username: String!): User
  updateProduct(color: String!, description: String!, imageUrl: String!, name: String!, price: Float!, productId: String!, quantity: Float!, size: Float!): Product!
  updateRoles(newRoles: [String!]!, userId: String!): User
  updateUserCover(cover: String!): User
  updateUserImage(image: String!): User
}

"""NFT Product Model"""
type Nftproduct {
  enc_info: [String!]!
  id: ID!
  pri_key: String!
  price: Float!
  pub_key: String!
  status: Boolean!
  user: User!
}

"""Product Model"""
type Product {
  color: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  imageUrl: String!
  name: String!
  price: Float!
  quantity: Float!
  size: Float!
  user: User!
}

"""Scream Model"""
type Profile {
  age: Float!
  bios: String!
  birthdate: DateTime!
  coverUrl: String!
  current: Current!
  firstname: String!
  gender: String!
  hometown: Hometown!
  id: ID!
  lastname: String!
  mentalStatus: String!
  profileUrl: String!
}

type Query {
  comments(screamId: String!): [Comment]!
  myInfo: User
  myprofile: Profile
  product(productId: String!): Product
  products: [Product]!
  profiles: [Profile]!
  recomments(commentId: String!, screamId: String!): [Recomment]!
  screams: [Scream]!
  services: [Service]!
  songs: [Song]!
  typeservices: [Typeservice]!
  users: [User]!
}

"""Scream Model"""
type Recomment {
  description: String!
  id: ID!
  user: User!
}

type ResponseMessage {
  message: String!
}

"""Scream Model"""
type Scream {
  comments: [Comment!]!
  createdAt: DateTime!
  description: String!
  id: ID!
  imageUrl: [String!]!
  likes: Float!
  shares: Float!
  status: [String!]!
  user: User!
}

"""Scream Model"""
type Service {
  address: String!
  contact: String!
  description: String!
  id: ID!
  imageUrl: String!
  logoUrl: String!
  name: String!
  status: Boolean!
  tags: [String!]!
  user: User!
}

"""Scream Model"""
type Song {
  alblum: String!
  artist: String!
  fileUrl: String!
  genre: String!
  id: ID!
  imageUrl: String!
  name: String!
  screams: [Scream!]!
  user: User!
}

"""User Model"""
type Typeservice {
  createdAt: DateTime!
  desc: String!
  id: ID!
  services: [Service!]!
  user: User!
}

"""User Model"""
type User {
  covers: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  images: String!
  nftproducts: [Nftproduct!]!
  products: [Product!]!
  profile: Profile!
  roles: [String!]!
  screams: [Scream!]!
  services: [Service!]!
  songs: [Song!]!
  typeservices: [Typeservice!]!
  username: String!
}
